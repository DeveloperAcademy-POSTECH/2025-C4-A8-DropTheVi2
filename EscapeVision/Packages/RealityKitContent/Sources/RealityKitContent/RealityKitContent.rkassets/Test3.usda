#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.120.2)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root" (
    customData = {
        float3 rotationEulerHint = (0, 0, 0)
    }
)
{
    reorder nameChildren = ["Room__1_", "BoxTest", "OpenLid", "OpenLidd", "Timeline2", "Door__1_", "File1", "Board1"]
    quatf xformOp:orient = (1, 0, 0, 0)
    float3 xformOp:translate = (0, 0.35, 0)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

    def "Room__1_" (
        active = true
        customData = {
            float3 rotationEulerHint = (-1.5707963, 0, 0)
        }
        references = @Room (1).usdz@
    )
    {
        quatf xformOp:orient = (0.70710677, -0.7071067, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 1.1920929e-7, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "Light"
        {
            over "garage_neon_light__neon"
            {
                over "DirectionalLight"
                {
                    def RealityKitStruct "Shadow"
                    {
                    }
                }
            }
        }

        over "Switch"
        {
            over "Switch1"
            {
                over "Handle1"
                {
                    over "Sphere_005" (
                        customData = {
                            float3 rotationEulerHint = (-1.1920929e-7, 0, 6.7179435e-8)
                        }
                    )
                    {
                        quatf xformOp:orient = (1, -4.470348e-8, 8.557132e-9, 3.3589718e-8)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                    }
                }
            }
        }

        over "Board"
        {
            over "_materials"
            {
                over "Particle_Board"
                {
                    token cullMode = "back" (
                        allowedTokens = ["unspecified", "none", "front", "back"]
                    )
                }
            }
        }
    }

    def "BoxTest" (
        active = true
        customData = {
            float3 rotationEulerHint = (-1.5707963, 0, 0)
        }
        references = @BoxTest.usdz@
    )
    {
        quatf xformOp:orient = (0.70710677, -0.7071067, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-0.8380774, 0.3272818, 1.1078693)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "Box"
        {
            over "Lock"
            {
                over "Plane_008"
                {
                    def RealityKitComponent "RCP_BehaviorsContainer"
                    {
                        rel behaviors = [
                            </Root/BoxTest/Box/Lock/Plane_008/OnTap>,
                            </Root/BoxTest/Box/Lock/Plane_008/OnCollision>,
                        ]
                        uniform token info:id = "RCP.BehaviorsContainer"
                    }

                    def Preliminary_Behavior "OnTap"
                    {
                        rel actions = </Root/BoxTest/Box/Lock/Plane_008/OnTap/Action>
                        uniform bool exclusive
                        rel triggers = </Root/BoxTest/Box/Lock/Plane_008/OnTap/Trigger>

                        def Preliminary_Trigger "Trigger"
                        {
                            rel affectedObjects = </Root/BoxTest/Box/Lock/Plane_008>
                            token info:id = "TapGesture"
                        }

                        def Preliminary_Action "Action"
                        {
                            rel affectedObjects = </Root>
                            rel animationLibraryKey = </Root/OpenLid>
                            rel animationLibraryKeyOverrideKey = </Root/BoxTest/Box/Lock/Plane_008/OnTap/Trigger>
                            token info:id = "PlayTimeline"
                            int loops = 0
                            int performCount = 1
                            token type = "serial"
                        }
                    }

                    def Preliminary_Behavior "OnCollision"
                    {
                        rel actions = </Root/BoxTest/Box/Lock/Plane_008/OnCollision/Action>
                        uniform bool exclusive
                        rel triggers = </Root/BoxTest/Box/Lock/Plane_008/OnCollision/Trigger>

                        def Preliminary_Trigger "Trigger"
                        {
                            rel affectedObjects = </Root/BoxTest/Box/Lock/Plane_008>
                            rel colliders = </Root/BoxTest/Box/Lock/Plane_008>
                            token info:id = "Collide"
                        }

                        def Preliminary_Action "Action"
                        {
                            rel affectedObjects = </Root>
                            rel animationLibraryKey = </Root/OpenLid>
                            rel animationLibraryKeyOverrideKey = </Root/BoxTest/Box/Lock/Plane_008/OnCollision/Trigger>
                            token info:id = "PlayTimeline"
                            int loops = 0
                            int performCount = 1
                            token type = "serial"
                        }
                    }

                    def RealityKitComponent "AnimationLibrary"
                    {
                        uniform token info:id = "RealityKit.AnimationLibrary"
                    }
                }
            }

            def RealityKitComponent "AnimationLibrary"
            {
                uniform token info:id = "RealityKit.AnimationLibrary"
            }

            over "Lid" (
                customData = {
                    float3 rotationEulerHint = (1.1920929e-7, 5.1357217e-16, -1.0263152e-15)
                }
            )
            {
                quatf xformOp:orient = (1, 8.685033e-8, 2.5678606e-16, -5.131576e-16)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.013536177575588226, -0.11702220886945724, 0.11268972605466843)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                over "Plane_002" (
                    customData = {
                        float3 rotationEulerHint = (0, 0, 0)
                    }
                )
                {
                    quatf xformOp:orient = (1, 0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def RealityKitComponent "RCP_BehaviorsContainer"
                    {
                        rel behaviors = [
                            </Root/BoxTest/Box/Lid/Plane_002/OnTap>,
                            </Root/BoxTest/Box/Lid/Plane_002/OnCollision>,
                        ]
                        uniform token info:id = "RCP.BehaviorsContainer"
                    }

                    def Preliminary_Behavior "OnTap"
                    {
                        rel actions = </Root/BoxTest/Box/Lid/Plane_002/OnTap/Action>
                        uniform bool exclusive
                        rel triggers = </Root/BoxTest/Box/Lid/Plane_002/OnTap/Trigger>

                        def Preliminary_Trigger "Trigger"
                        {
                            rel affectedObjects = </Root/BoxTest/Box/Lid/Plane_002>
                            token info:id = "TapGesture"
                        }

                        def Preliminary_Action "Action"
                        {
                            rel affectedObjects = </Root>
                            rel animationLibraryKey = </Root/OpenLidd>
                            rel animationLibraryKeyOverrideKey = </Root/BoxTest/Box/Lid/Plane_002/OnTap/Trigger>
                            token info:id = "PlayTimeline"
                            int loops = 0
                            int performCount = 1
                            token type = "serial"
                        }
                    }

                    def Preliminary_Behavior "OnCollision"
                    {
                        rel actions = </Root/BoxTest/Box/Lid/Plane_002/OnCollision/Action>
                        uniform bool exclusive
                        rel triggers = </Root/BoxTest/Box/Lid/Plane_002/OnCollision/Trigger>

                        def Preliminary_Trigger "Trigger"
                        {
                            rel affectedObjects = </Root/BoxTest/Box/Lid/Plane_002>
                            rel colliders = </Root/BoxTest/Box/Lid/Plane_002>
                            token info:id = "Collide"
                        }

                        def Preliminary_Action "Action"
                        {
                            rel affectedObjects = </Root>
                            rel animationLibraryKey = </Root/OpenLidd>
                            rel animationLibraryKeyOverrideKey = </Root/BoxTest/Box/Lid/Plane_002/OnCollision/Trigger>
                            token info:id = "PlayTimeline"
                            int loops = 0
                            int performCount = 1
                            token type = "serial"
                        }
                    }
                }
            }
        }

        def RealityKitComponent "AnimationLibrary"
        {
            uniform token info:id = "RealityKit.AnimationLibrary"
        }
    }

    def RealityKitTimeline "OpenLid"
    {
        reorder nameChildren = ["Track3", "Track"]
        def RealityKitTrack "Track3"
        {
            def RealityKitAction "Transform_To"
            {
                string actionKind = "moveTo"
                int blendLayer = 300
                double duration = 0.5
                uniform token info:id = "2211AA22-2DB4-40CE-B6A3-D4110736D556"
                float3 position = (0, 0, 0)
                quatf rotation = (0.70710677, 0, 0, -0.70710677)
                float3 scale = (1, 1, 1)
                double startTime = 1
                rel target = </Root/BoxTest/Box/Lock/Plane_008>

                def RealityKitStruct "transformMode"
                {
                    rel referenceEntity = </Root>
                    token type = "parent"
                }

                def RealityKitStruct "timingFunction"
                {
                    token type = "easeInOut"
                }
            }
        }

        def RealityKitTrack "Track"
        {
        }
    }

    def RealityKitTimeline "OpenLidd"
    {
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Transform_To"
            {
                string actionKind = "moveTo"
                int blendLayer = 300
                double duration = 0.5
                uniform token info:id = "BE2D5FE3-773E-4E74-A2ED-5170D031D9C8"
                float3 position = (0, 0, 0)
                quatf rotation = (0.70710677, 0.70710677, 0, 0)
                float3 scale = (1, 1, 1)
                double startTime = 1
                rel target = </Root/BoxTest/Box/Lid/Plane_002>

                def RealityKitStruct "transformMode"
                {
                    rel referenceEntity = </Root>
                    token type = "parent"
                }

                def RealityKitStruct "timingFunction"
                {
                    token type = "easeInOut"
                }
            }
        }
    }

    def RealityKitTimeline "Timeline2"
    {
        reorder nameChildren = ["Track2", "Track"]
        def RealityKitTrack "Track2"
        {
            def RealityKitAction "Transform_By"
            {
                string actionKind = "moveBy"
                int blendLayer = 300
                double duration = 1
                uniform token info:id = "86A3D3DE-D14C-4E2C-A458-1804F36B5CBB"
                quatf rotation = (0.70710677, 0, 0, -0.70710677)
                double startTime = 0.07455321749471444
                rel target = </Root/BoxTest/Box/Lock/Plane_008>

                def RealityKitStruct "timingFunction"
                {
                    token type = "easeInOut"
                }
            }
        }
    }

    def "Door__1_" (
        active = true
        customData = {
            float3 rotationEulerHint = (-1.5707963, 0, 0)
        }
        references = @Door (1).usdz@
    )
    {
        quatf xformOp:orient = (0.70710677, -0.7071067, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "File1" (
        active = true
        customData = {
            float3 rotationEulerHint = (-1.5707963, 0, 0)
        }
        references = @File.usdz@
    )
    {
        quatf xformOp:orient = (0.70710677, -0.7071067, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0.2, 0, -0.1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "Board1" (
        active = true
        customData = {
            float3 rotationEulerHint = (-4.7123885, -1.5707963, 0)
        }
        references = @Board1.usdz@
    )
    {
        quatf xformOp:orient = (0.5, -0.5, -0.5, -0.5)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-0.5, 0.1446499, 1.9568201)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "_materials"
        {
            over "Particle_Board"
            {
                token cullMode = "unspecified" (
                    allowedTokens = ["unspecified", "none", "front", "back"]
                )
                token outputs:mtlx:surface.connect = </Root/Board1/_materials/Particle_Board/PreviewSurface.outputs:out>
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/Board1/_materials/Particle_Board/Principled_BSDF.outputs:surface>
                float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (0, 110.5)

                over "Principled_BSDF" (
                    active = true
                )
                {
                }

                def Shader "PreviewSurface" (
                    active = false
                )
                {
                    uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
                    token outputs:out
                    float2 ui:nodegraph:node:pos = (-255, 105)
                }
            }

            over "Thumbtack"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
            }

            over "Papers"
            {
                token cullMode = "none" (
                    allowedTokens = ["unspecified", "none", "front", "back"]
                )
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
            }

            over "Material_002"
            {
                token cullMode = "back" (
                    allowedTokens = ["unspecified", "none", "front", "back"]
                )
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
            }

            over "Material_003"
            {
                token cullMode = "front" (
                    allowedTokens = ["unspecified", "none", "front", "back"]
                )
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
            }
        }

        over "Board" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Room__1_/Board/_materials/Particle_Board> (
                bindMaterialAs = "strongerThanDescendants"
            )

            over "Cube_003"
            {
                rel material:binding (
                    bindMaterialAs = "strongerThanDescendants"
                )
            }
        }
    }
}

